[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "This is a book",
    "section": "",
    "text": "1 Sample Page\nThis is a simple page with the following image:\n\n\n\nLocal Image\n\n\n\n\n\nCaption for Quarto Logo Image\n\n\n\n\n\nGreat Pyramid"
  },
  {
    "objectID": "gridpost.html",
    "href": "gridpost.html",
    "title": "2  Typical grid",
    "section": "",
    "text": "Intro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPandemic Deaths\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "famous_deaths.html#deaths-from-aids",
    "href": "famous_deaths.html#deaths-from-aids",
    "title": "3  Pandemic Deaths",
    "section": "3.1 Deaths from AIDS",
    "text": "3.1 Deaths from AIDS\n\n\n\nName\nCategory\nAge at death\n\n\n\n\nFreddie Mercury\nMusician\n45\n\n\nRock Hudson\nActor\n59\n\n\nAnthony Perkins\nActor\n60\n\n\nRudolf Nureyev\nDancer\n54\n\n\nLiberace\nMusician\n67\n\n\nIsaac Asimov\nAuthor\n72\n\n\nRobert Mapplethorpe\nPhotographer\n42\n\n\nPerry Ellis\nFashion designer\n46\n\n\nMichel Foucault\nPhilosopher\n57\n\n\nArthur Ashe\nTennis player\n49\n\n\nGia Carangi\nModel\n26\n\n\nAlvin Ailey\nChoreographer\n58\n\n\nKlaus Nomi\nMusician\n39\n\n\nKeith Haring\nArtist\n31\n\n\nHalston\nFashion designer\n57\n\n\nSteve Rubell\nNightclub owner\n45\n\n\nTony Richardson\nFilm director\n63\n\n\nMax Robinson\nJournalist\n49\n\n\nDavid Wojnarowicz\nArtist\n37\n\n\nRobert Chesley\nPlaywright\n47\n\n\nLarry Kramer\nWriter/Activist\n84\n\n\nPedro Zamora\nReality TV personality\n22\n\n\nNéstor Almendros\nCinematographer\n61\n\n\nDerek Jarman\nFilm director\n52\n\n\nHoward Ashman\nLyricist\n40\n\n\nFreddie Mercury\nMusician\n45\n\n\nJonathan Larson\nPlaywright/Musical Composer\n35\n\n\nBrad Davis\nActor\n41\n\n\nPeter Allen\nMusician\n48\n\n\nTim Richmond\nNASCAR driver\n34"
  },
  {
    "objectID": "famous_deaths.html#covid-19-deaths",
    "href": "famous_deaths.html#covid-19-deaths",
    "title": "3  Pandemic Deaths",
    "section": "3.2 COVID-19 Deaths",
    "text": "3.2 COVID-19 Deaths\n\n\n\nName\nCategory\nAge at death\n\n\n\n\nFred the Godson\nRapper\n35\n\n\nNick Cordero\nActor\n41\n\n\nAdam Schlesinger\nMusician and songwriter\n52\n\n\nWallace Roney\nJazz trumpeter\n59\n\n\nDiego Maradona\nFootball player and manager\n60\n\n\nJoe Diffie\nCountry music singer\n61\n\n\nAlan Merrill\nMusician and songwriter\n69\n\n\nMark Blum\nActor\n69\n\n\nKen Shimura\nComedian\n70\n\n\nJohn Prine\nSinger-songwriter\n73\n\n\nTerrence McNally\nPlaywright\n81\n\n\nPatricia Bosworth\nActress and author\n86\n\n\nEllis Marsalis Jr.\nJazz pianist and educator\n85\n\n\nManu Dibango\nSaxophonist and songwriter\n86\n\n\nLarry King\nTV and radio host\n87\n\n\nFountains of Wayne (Adam Schlesinger’s bandmate)\nBand\n-\n\n\n\n\n\n\nName\nCategory\nAge at death\n\n\n\n\nPedro Zamora\nReality TV personality\n22\n\n\nKeith Haring\nArtist\n31\n\n\nKlaus Nomi\nMusician\n39\n\n\nDavid Wojnarowicz\nArtist\n37\n\n\nGia Carangi\nModel\n26\n\n\nHoward Ashman\nLyricist\n40\n\n\nRobert Mapplethorpe\nPhotographer\n42\n\n\nSteve Rubell\nNightclub owner\n45\n\n\nFreddie Mercury\nMusician\n45\n\n\nPerry Ellis\nFashion designer\n46\n\n\nRobert Chesley\nPlaywright\n47\n\n\nPeter Allen\nMusician\n48\n\n\nMax Robinson\nJournalist\n49\n\n\nArthur Ashe\nTennis player\n49\n\n\nRudolf Nureyev\nDancer"
  },
  {
    "objectID": "famous_deaths.html#answers-from-bing",
    "href": "famous_deaths.html#answers-from-bing",
    "title": "3  Pandemic Deaths",
    "section": "3.3 Answers from Bing",
    "text": "3.3 Answers from Bing\n\n# \n#| eval: false\n# Import the required modules\n# import requests\n# import json\n# from bs4 import BeautifulSoup\n\n# # Define the URL of the Wikipedia page\n# url = \"https://en.wikipedia.org/wiki/List_of_deaths_due_to_COVID-19\"\n\n# # Make a GET request to fetch the raw HTML content\n# html_content = requests.get(url).text\n\n# # Parse the HTML content using BeautifulSoup\n# soup = BeautifulSoup(html_content, \"lxml\")\n\n# # Find the table element that contains the data\n# table = soup.find(\"table\", attrs={\"class\": \"wikitable sortable\"})\n\n# # Get all the rows of the table\n# rows = table.find_all(\"tr\")\n\n# # Create an empty list to store the data\n# data = []\n\n# # Loop through each row and extract the relevant information\n# for row in rows:\n#   # Get all the cells of the row\n#   cells = row.find_all(\"td\")\n#   # If there are cells, then it is not a header row\n#   if cells:\n#     # Get the name, description and age at death from each cell\n#     name = cells[0].text.strip()\n#     description = cells[1].text.strip()\n#     age_at_death = int(cells[2].text.strip())\n#     # Create a dictionary with these values\n#     record = {\"name\": name, \"description\": description, \"age_at_death\": age_at_death}\n#     # Append it to the data list\n#     data.append(record)\n\n# # Convert the data list to a JSON string using json.dumps()\n# json_data = json.dumps(data)\n\n# Print or save or use json_data as you wish\n\n\n\n\nAfter the pandemic"
  }
]